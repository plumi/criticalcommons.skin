<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns:art="http://simile.mit.edu/2003/10/ontologies/artstor#"
  xmlns:syn="http://purl.org/rss/1.0/modules/syndication/"
  xmlns="http://purl.org/rss/1.0/"
  xmlns:tal="http://xml.zope.org/namespaces/tal"
  xmlns:i18n="http://xml.zope.org/namespaces/i18n"
  xmlns:metal="http://xml.zope.org/namespaces/metal">

<metal:block
    define-macro="master"
    tal:define="syn context/portal_syndication;
                order python: request.set('sort_order', 'reverse');
                dummy python: request.set('sort_on', request.get('sort_on', 'effective'));
                types python: request.set('portal_type', 'PlumiVideo');
                objectList python:context.queryCatalog(show_all=1, use_types_blacklist=True, use_navigation_root=True);
                objects python: objectList">

<metal:block tal:define="dummy python:request.RESPONSE.setHeader('Content-Type', 'text/xml;;charset=utf-8')" />

<channel rdf:about="" tal:attributes="rdf:about request/URL">
  <title tal:content="context/pretty_title_or_id">The title</title>
  <link tal:content="context/portal_url">http://url.to.portal</link>

  <description>
    <metal:block define-slot="description">
      <tal:block content="context/Description">
        Default rss description goes here
      </tal:block>
    </metal:block>
  </description>

  <tal:comment replace="nothing">
    The syndication tool is pretty brain dead and won't let you access the variables
    you need for this from something like search_rss, unless you've enable site syndication
    it really needs rewriting.
  </tal:comment>

  <metal:block define-slot="syndication" />

  <image
    rdf:resource=""
    tal:attributes="rdf:resource string:${context/portal_url}/logo.png" />

  <items>
    <rdf:Seq>
      <tal:block repeat="obj_item python: objects" >
        <rdf:li rdf:resource=""
                tal:attributes="rdf:resource obj_item/getURL|obj_item/absolute_url" />
      </tal:block>
    </rdf:Seq>
  </items>

</channel>

<tal:block define="getMemberInfo nocall:context/portal_membership/getMemberInfo;"
           repeat="brain python: objects">
  <item rdf:about="" tal:attributes="rdf:about obj_item/getURL|obj_item/absolute_url"
        tal:define="obj_item brain/getObject|nocall:brain;
                    has_text exists:obj_item/aq_explicit/getText;
                    text python:has_text and obj_item.getText() or '';
                    has_effective exists:obj_item/aq_explicit/effective_date;
                    effective python:has_effective and obj_item.effective().HTML4() or '';
                    modified python:obj_item.modified().HTML4();
                    filmName obj_item/filmName|nothing;
                    DateProduced obj_item/DateProduced|nothing;
                    director obj_item/Director|nothing;
                    thumb_url python:obj_item.absolute_url()+'/thumbnailImage_thumb';
                    distributor obj_item/Distributor|nothing;
                    creator obj_item/Creator|nothing">
    <title tal:content="obj_item/pretty_title_or_id">Title</title>
    <tal:isVideo tal:condition="python: view.isVideo(obj_item)">
        <link tal:define="profiles python: view.profiles(obj_item.UID())" tal:content="string:${profiles/mp4-high/address|nothing}/${profiles/mp4-high/path|nothing}">check</link>
    </tal:isVideo>
    <tal:isAudio tal:condition="python: view.isAudio(obj_item)">
        <link tal:content="string:${obj_item/absolute_url}/@@download/video_file/${obj_item/video_file/filename}">check</link>
    </tal:isAudio>
    <tal:isImage tal:condition="python: view.isImage(obj_item)">
        <link tal:content="string:${obj_item/absolute_url}/@@download/video_file/${obj_item/video_file/filename}">check</link>
    </tal:isImage>
    <description tal:content="obj_item/Description">Description</description>
    <content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"
        tal:condition="has_text"
        tal:content="structure python:'&lt;![CDATA[' + text + ']]&gt;'">Content</content:encoded>
    <dcterms:source tal:condition="filmName" tal:content="filmName">filmName</dcterms:source>
    <dcterms:created tal:condition="DateProduced" tal:content="DateProduced">DateProduced</dcterms:created>
    <dcterms:creator tal:condition="director" tal:content="director">director</dcterms:creator>
    <dcterms:publisher tal:condition="distributor" tal:content="distributor">distributor</dcterms:publisher>
    <dc:creator tal:condition="creator" tal:define="author python:getMemberInfo(creator)" tal:content="python:author and author['fullname'] or creator">Creator</dc:creator>

    <art:thumbnail tal:condition="thumb_url" tal:attributes="url thumb_url">thumbnail</art:thumbnail>

    <dcterms:rights tal:content="obj_item/Rights">Rights</dcterms:rights>
    <tal:block tal:repeat="item obj_item/Subject">
      <dcterms:subject tal:content="item">Item</dcterms:subject>
    </tal:block>
    <dcterms:date tal:content="python: has_effective and effective or modified">Published or last modified date if no published date</dcterms:date>
    <tal:isVideo tal:condition="python: view.isVideo(obj_item)">
        <dcterms:type >Video</dcterms:type>
    </tal:isVideo>
    <tal:isAudio tal:condition="python: view.isAudio(obj_item)">
        <dcterms:type>Audio</dcterms:type>
    </tal:isAudio>
    <tal:isImage tal:condition="python: view.isImage(obj_item)">
        <dcterms:type>Image</dcterms:type>
    </tal:isImage>
  </item>
</tal:block>

</metal:block>
</rdf:RDF>
